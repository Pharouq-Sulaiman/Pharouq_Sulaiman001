bank_customers <- read.csv("./data_science/Bank customers.csv")

bankCustomers <- read.csv("./data_science/Bank customers.csv")
bank_customers$CLIENTNUM <- as.character(bank_customers$CLIENTNUM)
head(bank_customers)
colSums(is.na(bank_customers))
anyNA(bank_customers)
table(bank_customers$Card_Category)
library(tidyverse)
summary(bank_customers$Card_Category)
str(bank_customers)
unique(bank_customers$Gender)
rep <- c("M","F")
code <- c(0,1)
bank_customers$Gender <- code[match(bank_customers$Gender, rep)]
bank_customers$Gender <- as.factor(bank_customers$Gender)

unique(bank_customers$Education_Level)
rep1 <- c( "Unknown","Uneducated", "High School","College", "Graduate", "Post-Graduate", "Doctorate")
code1 <- c(0,0.1,0.2,0.3,0.4,0.5,0.6)
bank_customers$Education_Level <- code1[match(bank_customers$Education_Level,rep1)]
bank_customers$Education_Level <- as.factor(bank_customers$Education_Level)

unique(bank_customers$Marital_Status)
rep2<- c("Unknown", "Single", "Married", "Divorced")
code2 <- c(0,0.5,1.0,1.5)
bank_customers$Marital_Status <- code2[match(bank_customers$Marital_Status,rep2)]
bank_customers$Marital_Status <- as.factor(bank_customers$Marital_Status)

unique(bank_customers$Income_Category)
rep3<- c("Unknown", "Less than $40K", "$40K - $60K","$60K - $80K", "$80K - $120K" ,  "$120K +")
code3<- c(0.1,0.2,0.3,0.4,0.5,0.6)
bank_customers$Income_Category <- code3[match(bank_customers$Income_Category,rep3)]
bank_customers$Income_Category <- as.factor(bank_customers$Income_Category)

unique(bank_customers$Card_Category)
rep4<- c( "Blue","Gold","Silver","Platinum")
code4<- c(1,1.1,1.2,1.3)
bank_customers$Card_Category <- code4[match(bank_customers$Card_Category,rep4)]
bank_customers$Card_Category <- as.factor(bank_customers$Card_Category)

bank_customers <-   bank_customers%>%
  select(-c(Attrition_Flag,Dependent_count,Total_Ct_Chng_Q4_Q1,Total_Amt_Chng_Q4_Q1,Total_Relationship_Count,Contacts_Count_12_mon,Months_Inactive_12_mon,Marital_Status, Education_Level,Card_Category))
#factor analysis
library(FactoMineR)
library(factoextra)
library(cluster)
library(tidyverse)
str(bank_customers)
set.seed(334)
ss <- sample(1:1000,)
bank_customers1 <- bank_customers[ss,]
?daisy
#bank_customers1 <- scale(bank_customers1)
bank_customers1 <- daisy(bank_customers1)
bank_customers1 <- as.matrix(bank_customers1)
fviz_nbclust(bank_customers1 , kmeans, method = "wss")
fviz_nbclust( bank_customers1, pam, method = "wss")
fviz_nbclust(bank_customers1, pam, method = "silhouette")+
  theme_classic()
fviz_nbclust(bank_customers1, clara, method = "silhouette")+
  theme_classic()
str(numeric_data)
numeric_data <-bank_customers1[, sapply(bank_customers1, is.numeric)]
standardized_data <- scale(numeric_data)

# Create a new dataset with standardized numeric variables and non-numeric variables
standardized_dataset <- cbind(bank_customers1[, sapply(bank_customers1, function(bank_customers1) !is.numeric(bank_customers1))], standardized_data)
#end work
standardized_dataset <- standardized_dataset%>%
  select(-CLIENTNUM)
clara.res <- clara(scaled_bank_customer,2, samples = 300, pamLike = TRUE, metric = "manhattan", stand = FALSE)
clara.res$clustering
uf1 <- cbind(uf,cluster= clara.res$clustering)
fviz_cluster(clara.res,
             palette = c("jco"), # color palette
             ellipse.type = "t", # Concentration ellipse
             repel = TRUE, # Avoid label overplotting (slow)
             geom = "point",
             pointsize = 3,
             ggtheme = theme_classic())
clara.res$silinfo
work <- bank_customers[c(388,443,997,542,702,579), ]

#end of work





#FAMD
res.famd <- FAMD(standardized_dataset, ncp=30, graph = TRUE)
eig.val <- get_eigenvalue(res.famd)
fviz_screeplot(res.famd)
var <- get_famd_var(res.famd)
# Coordinates of variables
head(var$coord)
# Cos2: quality of representation on the factore map
head(var$cos2)
# Contributions to the dimensions
head(var$contrib)
fviz_pca_var(res.pca,col.var = "red")
library("corrplot")
corrplot(var$cos2, is.corr = FALSE)
fviz_famd_var(res.famd, repel = TRUE)
# Contribution to the first dimension
fviz_contrib(res.famd, "var", axes = 1)
# Contribution to the second dimension
fviz_contrib(res.famd, "var", axes = 2)

fviz_famd_var(res.famd, repel = TRUE)
# Contribution to the first dimension
fviz_contrib(res.famd, "var", axes = c(1:5))
# Contribution to the second dimension
fviz_contrib(res.famd, "var", axes =c(1:13))
names(bank_customers)

quanti.var <- get_famd_var(res.famd, "quanti.var")
quanti.var$contrib
fviz_famd_var(res.famd, "quanti.var", repel = TRUE,
              col.var = "red")
fviz_famd_var(res.famd, "quanti.var", col.var = "contrib",
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
              repel = TRUE)
#cos2
fviz_famd_var(res.famd, "quanti.var", col.var = "cos2",
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
              repel = TRUE)

#qualitative
quali.var <- get_famd_var(res.famd, "quali.var")
quali.var$contrib

fviz_famd_var(res.famd, "quali.var", col.var = "contrib",
              gradient.cols = c("#00AFBB", "#FC4E07")
)

#ind
ind <- get_famd_ind(res.famd)
ind

fviz_famd_ind(res.famd, col.ind = "cos2",
              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
              repel = TRUE)

fviz_mfa_ind(res.famd,
             habillage = "Label", # color by groups
             palette = c("#00AFBB", "#E7B800", "#FC4E07"),
             addEllipses = TRUE, check.names=FALSE,
             ellipse.type = "confidence",
             repel = TRUE # Avoid text overlapping
)
fviz_ellipses(res.famd, c("Label", "Soil"), repel = TRUE)

numeric_vars <- standardized_dataset[, sapply(standardized_dataset, is.numeric)]
factor_vars <- standardized_dataset[, sapply(standardized_dataset, function(x) is.factor(x) || is.character(x))]
numeric_vars1 <- get_dist(numeric_vars, method="spearman")
numeric_vars1 <- as.matrix(numeric_vars1)
factor_vars1 <- daisy(factor_vars, metric = "jaccard")
factor_vars1 <- as.matrix(factor_vars1)
scaled_bank_customer <- cbind(factor_vars1,numeric_vars1)
anyNA(scaled_bank_customer)
scaled_bank_customer <- as.dist(scaled_bank_customer)
fviz_dist(scaled_bank_customer)

res.fin <- HCPC(res.famd, nb.clust = 0, min = 3, max = NULL, graph = TRUE, method = "average")
res.fin2 <-  hclust(d= scaled_bank_customer, method = "average" )
fviz_dend(res.fin, cex = 1.0, k = 2,
          k_colors = "jco", type = "t")
